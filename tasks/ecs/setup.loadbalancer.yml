---
- debug: var=vpc_id
- name: Create a target group with instance targets
  elb_target_group:
    name: "{{ aws_env }}-{{ ecs_tg_name }}"
    protocol: http
    port: "{{ ecs_container_port }}"
#    vpc_id: "{{ vpc_id }}"
    region: "{{ aws_region }}"
    health_check_protocol: http
    health_check_path: /
    health_check_interval: 30
    healthy_threshold_count: 2
    unhealthy_threshold_count: 3
    successful_response_codes: "200"
    stickiness_enabled: no
    state: present
    wait_timeout: 200
    wait: yes
    tags: {Name: "{{ aws_env }}-{{ ecs_tg_name }}"}
  register: elb_tg
- debug: var=elb_tg verbosity=3

# Create an ALB with listeners and rules
- name: Create application load-balancer
  elb_application_lb:
    name: "{{ aws_env }}-{{ ecs_alb_name }}"
    subnets: "{{ ecs_subnet_ids }}"
    security_groups: "{{ ecs_security_group_ids }}"
    scheme: internet-facing
    state: present
    wait_timeout: 200
    wait: True
    listeners:
      - Protocol: HTTP # Required. The protocol for connections from clients to the load balancer (HTTP or HTTPS) (case-sensitive).
        Port: "{{ ecs_alb_listener_port }}" # Required. The port on which the load balancer is listening.
        DefaultActions:
          - Type: forward # Required.
            TargetGroupName: "{{ aws_env }}-{{ ecs_tg_name }}" # Required. The name of the target group
