# tasks/vpc/setup.vpc.yml
# ---
# creates a S3 bucket, as a public bucket, configures cloudformation

# Use the Ansible module to create our S3 bucket, for saving the build folder of SPA
- name: Create S3 bucket for UI app
  s3_bucket:
    name: "{{ s3_bucket_name }}"
    policy: "{{ lookup( 'file','front_app_bucket_policy.json' )}}"
    state: present
    region: "{{ ui_host_resource_region }}"
    versioning: "{{ s3_bucket_versioning_enabled }}"
    tags:
      name: "{{ s3_bucket_name }}"
      type: "{{ s3_bucket_type }}"

- name: create a distribution with an origin, logging and default cache behavior
  cloudfront_distribution:
    state: present
    caller_reference: '1484796016700'
    origins:
      - id: 'my test origin-000111'
        domain_name: "http://{{ s3_bucket_name }}.s3-website-{{ ui_host_resource_region }}.amazonaws.com"
        S3OriginConfig:
          OriginAccessIdentity: ''
        origin_path: "{{ cf_origin_path }}"
    default_cache_behavior:
      target_origin_id: 'my test origin-000111'
      forwarded_values:
#        viewer_protocol_policy: redirect-to-https
        query_string: true
        cookies:
          forward: all
        headers:
          - '*'
      viewer_protocol_policy: allow-all
      smooth_streaming: true
      compress: true
      allowed_methods:
        items:
          - GET
          - HEAD
        cached_methods:
          - GET
          - HEAD
    logging:
      enabled: false
      include_cookies: false
      bucket: "{{ s3_bucket_name }}.s3.amazonaws.com"
      prefix: myprefix/
    default_root_object: "{{ cf_default_root_object }}"
    viewer_certificate:
      cloudfront_default_certificate: true
    http_version: http2
    enabled: true
    comment: this is a CloudFront distribution with logging